<?php
// Example module that extends WebFM functionality to allow arbitrary operations
// on uploaded files

/**
 * Implementation of hook_init()
 *
 */
function webfm_ext_example_init(){
  $modulepath = drupal_get_path('module', 'webfm');
  require_once $modulepath.'/webfm_file.inc';
}

/**
 * Implementation of hook_help().
 */
function webfm_ext_example_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Example of a module that extends webfm functionality');
  }
}

/**
 * Implementation of hook_settings().
 */
function webfm_ext_example_settings() {

  $form['webfm_ext_example_dir'] =
    array('#type' => 'textfield',
          '#title' => t('WebFM Extension Example Root Directory'),
          '#default_value' => variable_get('webfm_ext_example_dir', ''),
          '#maxlength' => '100',
          '#size' => '70',
          '#description' => t('Root directory used to present the extension
          example interface. Users will not be able to go up from this folder.
          <br />This path is relative to "File system path" set in
          admin/settings and must be preceeded with a slash.')
         );

  return system_settings_form($form);
}

/**
 * Implementation of hook_perm().
 */
function webfm_ext_example_perm() {
  return array('WebFM extension perm');
}

/**
 * Implementation of hook_menu
 */
function webfm_ext_example_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_main');
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example_js',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_ajax',
      'type' => MENU_CALLBACK);
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example_process',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_process',
      'type' => MENU_CALLBACK);
    $items[] = array('path' => 'admin/settings/webfm_extension_example',
      'title' => t('Webfm Extension Example Settings'),
      'description' => t('Configure WebFM Extension example.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('webfm_ext_example_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM);
  }
  return $items;
}

function webfm_ext_example_ajax () {
  if(module_exists('webfm') && isset($_POST["action"])) {
    $root_path = variable_get('file_directory_path', '').variable_get('webfm_root_dir', '');
    $example_root_path = variable_get('file_directory_path', '').variable_get('webfm_ext_example_dir', '');

    // AJAX switch-case:
    switch(trim(strtolower($_POST["action"]))) {
      case "delete":
        if(isset($_POST["param0"])) {
          if($source = wfm_check_path(trim(rawurldecode($_POST["param0"])), $example_root_path)) {
            // prevent any ../ shenanigans
            if(!ereg('\.\.', $source)) {
              print drupal_to_js(array('status' => webfm_delete($source, TRUE)));
            }
          }
        }
        exit();
        break;

      case "read":
        if(isset($_POST["param0"]))
          $read_dir = rawurldecode($_POST["param0"]);
        if(!is_dir($read_dir))
          $read_dir = $root_path;

        $rootpath_var = '';
        if($source = wfm_check_path(trim($read_dir), $example_root_path))
          $rootpath_var = 'webfm_ext_example_dir';

        if($rootpath_var) {
          if(!is_dir($source) || ereg('\.\.', $source)) exit();
          //Build current directory listings
          $dirlist = new build_dir_list($source, $rootpath_var);
          if($dirlist->get_breadcrumb())
            print drupal_to_js(array('status' => TRUE, 'current' => $source, 'bcrumb' => $dirlist->get_breadcrumb(), 'dirs' => $dirlist->get_dir_listing(), 'files' => $dirlist->get_file_listing()));
          else
            //invalid directory
            print drupal_to_js(array('status' => FALSE));
        }
        exit();
        break;

      // AJAX: Rename an existing file or directory
      case "rename":
        if(isset($_POST["param0"]) && isset($_POST["param1"])) {
          if($source = wfm_check_path(trim(rawurldecode($_POST["param0"])), $example_root_path)) {
            $dest = trim(rawurldecode($_POST["param1"]));
            // prevent any ../ shenanigans
            if(!ereg('\.\.', $dest)) {
              print drupal_to_js(array('status' => webfm_rename($source, $dest, TRUE)));
            }
          }
        }
        exit();
        break;

      default:
        exit();
        break;
    }
    exit();
  }
  exit();
}

function webfm_ext_example_main() {
  global $base_url;

  if(module_exists('webfm')) {
    $modulepath = drupal_get_path('module', 'webfm');
    drupal_add_js($modulepath.'/js/webfm.js');
    drupal_add_js($modulepath.'/js/webfm_upload.js');
    drupal_add_css($modulepath.'/css/webfm.css');
    drupal_add_js('misc/progress.js');
    $modulepath = drupal_get_path('module', 'webfm_ext_example');
    drupal_add_js($modulepath.'/webfm_ext_example.js');
    if(is_null($inline_js)) {
      $clean_url = variable_get('clean_url', 0);
      $clean = (($clean_url == 0) || ($clean_url == '0')) ? FALSE : TRUE;
      $inline_js = webfm_ext_example_inline_js($base_url, $clean);
    }

    $output  = '<noscript><p class="err">JavaScript must be enabled in order to use webfm!</p></noscript>'."\n";
    // This div is used by the javascript to anchor the elements created by WebFM
    // on the DOM
    $output .= '<div id="webfm-ext-example">'."\n";
    $output .= drupal_get_form('webfm_upload_fieldset');
    $output .= '</div>'."\n";
  } else {
    drupal_set_message('webfm module must be enabled for this module to function', error);
  }

  return $output;
}

/**
 * Inline javascript
 */
function webfm_ext_example_inline_js($base_url, $clean_url) {
  $js = '<script type="text/javascript">
    function getBaseUrl(){return '.drupal_to_js($base_url).';}
    function getExamplePath(){return "'.variable_get("file_directory_path","").variable_get("webfm_ext_example_dir","").'";}
    function getModUrl(){return '.drupal_to_js("webfm_ext_example_js").';}
    function getIconDir(){return '.drupal_to_js($base_url."/".variable_get('webfm_icon_dir','')).';}
    function getDebugFlag(){return '.drupal_to_js(variable_get('webfm_debug','')).';}
    function getCleanUrl(){return '.drupal_to_js($clean_url).';}
    </script>';
  drupal_set_html_head($js);
  return $js;
}

/**
 * This example process is kicked off by a webfm context menu selection on a
 * file that will be operated on.  The file must exist in the webfm_files
 * table for it to be a legitimate target of the process.
 */
function webfm_ext_example_process(){
  $output = '';
  if(!(isset($_GET['fid'])) || !(isset($_GET['action'])))
    die;
  $fid = rawurldecode($_GET['fid']);
  if(($file = webfm_get_file_record($fid)) === FALSE)
    die;
  $action = rawurldecode($_GET['action']);

  //add css file for example
  $modulepath = drupal_get_path('module', 'webfm_ext_example');
  drupal_add_css($modulepath.'/webfm_ext_example.css');

  //adding timer to see how long all of this takes.
  $timeparts = explode(' ',microtime());
  $starttime = $timeparts[1].substr($timeparts[0],1);

  // (www.php.net/manual) file() returns the file in an array.
  // Each element of the array corresponds to a line in the file, with the
  // newline still attached. Upon failure, file() returns FALSE.
  $file_array = file($file->fpath);

  // this example does nothing except take CSV values, reorder them and
  // serialize into an array.  This array could be used for comparison with
  // serialized arrays of existing db records, etc.
  $db_array = array();
  foreach($file_array as $line){
    $record = explode(",", str_replace('"','',$line));
    //$record array: 0 = last name, 1 = first name, 2 = uid, 3 = city
    //$db_array is built as follows:
    //$db_array[uid] = serialized(array(uid, firstname lastname of city)
    if(trim($record[3]) == '') $record[3] = 'UNKNOWN';
    $db_array[$record[2]] = serialize(array($record[2], $record[1].' '.$record[0].' of '.rtrim($record[3])));
  }

  // Example operation on file
  // Database manipulations would likely happen here
  $report['data'] = array();
  $report['action'] = $action;
  switch($action) {
    case 'ex-op':
      // No db operations - for now we simply output the serialized data
      foreach($db_array as $data)
        $report['data'][] = $data;
      break;
  }
  $report['count'] = count($file_array);

  //call theme function - add it to output.
  $output .= theme('webfm_ext_example_report', $report);

  //add timer info - if not needed comment out.
  $timeparts = explode(' ',microtime());
  $endtime = $timeparts[1].substr($timeparts[0],1);
  $output .= 'Execution time: '.($endtime - $starttime);

  print theme('page', $output);
}

function theme_webfm_ext_example_report($report){
  $output = '<div id="webfm_ext_example_output"><h2>'.$report['action'].'</h2>'."\n";
  switch($report['action']) {
    case 'ex-op':
      $output .= 'There are '.$report['count'].' records in the input file.<br/>'."\n";
      foreach($report['data'] as $line)
        $output .= $line.'<br/>'."\n";
      break;
  }
  $output .= '</div>'."\n";
  return $output;
}
