<?php
/* $Id$ */

// Example module that extends WebFM functionality to allow arbitrary operations
// on uploaded files

/**
 * Implementation of hook_help().
 */
function webfm_ext_example_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Example of a module that extends webfm functionality');
  }
}

/**
 * Implementation of hook_settings().
 */
function webfm_ext_example_settings() {

  $form['webfm_ext_example_dir'] =
    array('#type' => 'textfield',
          '#title' => t('WebFM Extension Example Root Directory'),
          '#default_value' => variable_get('webfm_ext_example_dir', ''),
          '#maxlength' => '100',
          '#size' => '70',
          '#description' => t('Root directory used to present the extension example interface. Users will not
                               <br />be able to go up from this folder.
                         <br /><br />This path is relative to "File system path" set in admin/settings and must be
                               <br />preceeded with a slash.')
         );

  return system_settings_form($form);
}

/**
 * Implementation of hook_perm().
 */
function webfm_ext_example_perm() {
  return array('WebFM extension perm');
}

/**
 * Implementation of hook_menu
 */
function webfm_ext_example_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_main');
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example_js',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_ajax',
      'type' => MENU_CALLBACK);
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example_process',
      'access' => user_access('WebFM extension perm'),
      'callback' => 'webfm_ext_example_process',
      'type' => MENU_CALLBACK);
    $items[] = array(
      'title' => t('WebFM Extension Example'),
      'path' => 'webfm_ext_example_upload',
      'access' => user_access('access webfm'),
      'callback' => 'webfm_ext_example_upload',
      'type' => MENU_CALLBACK);
    $items[] = array('path' => 'admin/settings/webfm_extension_example',
      'title' => t('Webfm Extension Example Settings'),
      'description' => t('Configure WebFM Extension example.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('webfm_ext_example_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM);
  }
  return $items;
}

function webfm_ext_example_upload () {
  $root_path = file_directory_path().variable_get('webfm_root_dir', '');
  $example_root_path = file_directory_path().variable_get('webfm_ext_example_dir', '');
  if ($root_path == $example_root_path) {
    drupal_set_message(t('illegal name for webfm_ext_example root directory'), error);
    exit();
  }
//  $db_check = webfm_check_path($example_root_path, $root_path) ? TRUE : FALSE;
  $db_check = TRUE;

  //Get the destination path from the edit-webfmuploadpath hidden field in the upload form
  if($_POST['webfmuploadpath']) {
    $dest = webfm_check_path($_POST['webfmuploadpath'], $example_root_path);
    if($dest) {
      // Save new file uploads to tmp dir.
      if(($file = file_check_upload('webfm_upload')) != FALSE) {
        if(webfm_upload_validate($file) === TRUE) {
          // file has been put in temp and we have a valid file object
          if($file_uploaded = file_move($file, $dest)) {
            // file was moved to its final destination
            if($db_check == TRUE) {
              //Insert file into database if under webfm_root
              if($file_in_db = webfm_dbinsert_file($file)) {
                // file was inserted into the database
                drupal_set_message(t('Upload Success'));
              } else {
                file_delete($file->filepath);
                drupal_set_message(t('webfm_dbinsert_file() failed'), error);
              }
            } else {
              // Uploaded to non-db-controlled area
              drupal_set_message(t('Upload success'));
            }
          } else {
            drupal_set_message(t('file_move to %path failed', array('%path' => $dest)), error);
          }
        } else {
          drupal_set_message(t('webfm_upload_validate() failed'), error);
        }
      } else {
        drupal_set_message(t('file_check_upload() failed'), error);
      }
    } else{
      drupal_set_message(t('Invalid destination path: %dest', array('%dest' => $dest)), error);
    }
  } else {
    drupal_set_message(t('Invalid upload path'), error);
  }

  $form = webfm_upload_form('webfm_ext_example_upload');
  $form = form_builder('upload_js', $form);
  $output = theme('status_messages') . drupal_render($form);
  print drupal_to_js(array('status' => TRUE, 'data' => $output));
  exit();
}

function webfm_ext_example_ajax () {
  if(module_exists('webfm') && isset($_POST["action"])) {
    $root_path = variable_get('file_directory_path', '').variable_get('webfm_root_dir', '');
    $example_root_path = variable_get('file_directory_path', '').variable_get('webfm_ext_example_dir', '');
    if ($root_path == $example_root_path) {
      drupal_set_message(t('illegal name for webfm_ext_example root directory'), error);
      webfm_json(array('status' => FALSE, 'data' => 'illegal root dir for webfm_ext_example module'));
      exit();
    }
    $db_check = webfm_check_path($example_root_path, $root_path) ? TRUE : FALSE;

    // AJAX switch-case:
    switch(trim(rawurldecode($_POST["action"]))) {
      case "delete":
        if(isset($_POST["param0"])) {
          if($source = webfm_check_path(trim(rawurldecode($_POST["param0"])), $example_root_path)) {
            // prevent any ../ shenanigans
            if(!ereg('\.\.', $source)) {
              webfm_json(array('status' => webfm_delete($source, $db_check)));
            } else {
              webfm_json(array('status' => FALSE, 'data' => 'illegal dir'));
            }
          }
        } else {
          webfm_json(array('status' => FALSE, 'data' => 'insufficient params'));
        }
        exit();
        break;

      case "read":
        if(isset($_POST["param0"]))
          $read_dir = rawurldecode($_POST["param0"]);

        $rootpath_var = '';
        if($source = webfm_check_path(trim($read_dir), $example_root_path))
          $rootpath_var = 'webfm_ext_example_dir';

        if($rootpath_var) {
          if(!is_dir($source)) {
            webfm_json(array('status' => FALSE, 'data' => 'directory does not exist'));
            exit();
          }
          if(ereg('\.\.', $source)) {
            webfm_json(array('status' => FALSE, 'data' => 'illegal read dir'));
            exit();
          }
          //Build current directory listings
          $dirlist = new webfm_build_dir_list($source, $rootpath_var, TRUE);
          if($dirlist->get_breadcrumb())
            webfm_json(array('status' => TRUE, 'current' => $source, 'bcrumb' => $dirlist->get_breadcrumb(), 'dirs' => $dirlist->get_dir_listing(), 'files' => $dirlist->get_file_listing()));
          else
            //invalid directory
            webfm_json(array('status' => FALSE, 'data' => 'invalid dir'));
        } else
          //invalid directory
          webfm_json(array('status' => FALSE, 'data' => 'invalid path'));
        exit();
        break;

      // AJAX: Rename an existing file or directory
      case "rename":
        if(isset($_POST["param0"]) && isset($_POST["param1"])) {
          if($source = webfm_check_path(trim(rawurldecode($_POST["param0"])), $example_root_path)) {
            $dest = trim(rawurldecode($_POST["param1"]));
            // prevent any ../ shenanigans
            if(!ereg('\.\.', $dest)) {
              webfm_json(array('status' => webfm_rename($source, $dest, $db_check)));
            } else {
              webfm_json(array('status' => FALSE, 'data' => 'illegal name'));
            }
          }
        } else {
          webfm_json(array('status' => FALSE, 'data' => 'insufficient params'));
        }
        exit();
        break;

      default:
        webfm_json(array('status' => FALSE, 'data' => 'unknown operation'));
        exit();
        break;
    }
    exit();
  }
  exit();
}

function webfm_ext_example_main() {
  global $base_url;

  if(module_exists('webfm')) {
    $modulepath = drupal_get_path('module', 'webfm');
    require_once $modulepath.'/webfm_file.inc';
    drupal_add_js($modulepath.'/js/webfm.js');
    drupal_add_js($modulepath.'/js/webfm_upload.js');
    drupal_add_css($modulepath.'/css/webfm.css');
    drupal_add_js('misc/progress.js');
    $modulepath = drupal_get_path('module', 'webfm_ext_example');
    drupal_add_js($modulepath.'/webfm_ext_example.js');
    if(is_null($inline_js)) {
      $clean_url = variable_get('clean_url', 0);
      $clean = (($clean_url == 0) || ($clean_url == '0')) ? FALSE : TRUE;
      $inline_js = webfm_ext_example_inline_js($base_url, $clean);
    }

    $output = '<p>Use the context menu to operate on the sample .csv file</p>'."\n";
    $output .= '<noscript><p class="err">JavaScript must be enabled in order to use webfm!</p></noscript>'."\n";
    // This div is used by the javascript to anchor the elements created by WebFM
    // on the DOM
    $output .= '<div id="webfm-ext-example">'."\n";
    $output .= drupal_get_form('webfm_ext_example_upload_fieldset');
    $output .= '</div>'."\n";
  } else {
    drupal_set_message('webfm module must be enabled for this module to function', error);
  }

  return $output;
}

function webfm_ext_example_upload_fieldset() {
  $form = array();
  $form['webfm_uploads'] = array(
    '#type' => 'fieldset',
    '#title' => t('File Upload'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => t('Uploaded file will be saved to the current directory.'),
    '#prefix' => '<div class="attachments">',
    '#suffix' => '</div>',
    '#weight' => 30);
  // Wrapper for fieldset contents (used by upload JS).
  // NOTE: upload.js requires six char prefix on wrapper/button names
  $form['webfm_uploads']['wrapper'] = array(
    '#prefix' => '<div id="wfmatt-wrapper">',
    '#suffix' => '</div>');
  $form['webfm_uploads']['wrapper'] += webfm_upload_form('webfm_ext_example_upload');
  $form['#attributes']['enctype'] = 'multipart/form-data';
  return $form;
}

/**
 * Inline javascript
 */
function webfm_ext_example_inline_js($base_url, $clean_url) {
  $js = '<script type="text/javascript">
    function getBaseUrl(){return '.drupal_to_js($base_url).';}
    function getExamplePath(){return "'.variable_get("file_directory_path","").variable_get("webfm_ext_example_dir","").'";}
    function getModUrl(){return '.drupal_to_js("webfm_ext_example_js").';}
    function getIconDir(){return '.drupal_to_js($base_url."/".variable_get('webfm_icon_dir','')).';}
    function getDebugFlag(){return '.drupal_to_js(variable_get('webfm_debug','')).';}
    function getCleanUrl(){return '.drupal_to_js($clean_url).';}
    </script>';
  drupal_set_html_head($js);
  return $js;
}

/**
 * This example process is kicked off by a webfm context menu selection on a
 * file that will be operated on.  The file must exist in the webfm_files
 * table for it to be a legitimate target of the process.
 */
function webfm_ext_example_process(){
  $root_path = file_directory_path().variable_get('webfm_root_dir', '');
  $example_root_path = file_directory_path().variable_get('webfm_ext_example_dir', '');
  if ($root_path == $example_root_path)
    exit();
  $db_check = webfm_check_path($example_root_path, $root_path) ? TRUE : FALSE;

  if(!(isset($_GET['file'])) || !(isset($_GET['action'])))
    exit();

  if($db_check) {
    //if file under webfm db control - file var is fid - get path from db
    if(($file = webfm_get_file_record(rawurldecode($_GET['file']))) !== FALSE)
      $filepath = $file->fpath;
    else
      exit();
  } else {
    //file not in db - var is file path
    $filepath = rawurldecode($_GET['file']);
  }

  // Check file extension
  $ext = explode('.', $filepath);
  if(count($ext > 1)) {
    $extension = array_pop($ext);
    if((strtolower($extension)) !== 'csv') {
      $output = 'invalid file type - csv files only permitted';
      print theme('page', $output);
      exit();
    }
  }

  // (www.php.net/manual) file() returns the file in an array.
  // Each element of the array corresponds to a line in the file, with the
  // newline still attached. Upon failure, file() returns FALSE.
  if(($file_array = file($filepath)) === FALSE)
    exit();

  //add css file for example
  $modulepath = drupal_get_path('module', 'webfm_ext_example');
  drupal_add_css($modulepath.'/webfm_ext_example.css');

  //adding timer to see how long all of this takes.
  $timeparts = explode(' ',microtime());
  $starttime = $timeparts[1].substr($timeparts[0],1);

  // this example does nothing except take CSV values, reorder them and
  // serialize into an array.  This array could be used for comparison with
  // serialized arrays of existing db records, etc.
  $db_array = array();
  foreach($file_array as $line){
    $record = explode(",", str_replace('"','',$line));
    //$record array: 0 = last name, 1 = first name, 2 = uid, 3 = city
    //$db_array is built as follows:
    //$db_array[uid] = serialized(array(uid, firstname lastname of city)
    if(trim($record[3]) == '') $record[3] = 'UNKNOWN';
    $db_array[$record[2]] = serialize(array($record[2], $record[1].' '.$record[0].' of '.rtrim($record[3])));
  }

  // Example operation on file
  // Database manipulations would likely happen here
  $report['data'] = array();
  $action = rawurldecode($_GET['action']);
  $report['action'] = $action;
  switch($action) {
    case 'ex-op':
      // No db operations - for now we simply output the serialized data
      foreach($db_array as $data)
        $report['data'][] = $data;
      break;
  }
  $report['count'] = count($file_array);

  //call theme function - add it to output.
  $output = theme('webfm_ext_example_report', $report);

  //add timer info - if not needed comment out.
  $timeparts = explode(' ',microtime());
  $endtime = $timeparts[1].substr($timeparts[0],1);
  $output .= 'Execution time: '.($endtime - $starttime);

  print theme('page', $output);
}

function theme_webfm_ext_example_report($report){
  $output = '<div id="webfm_ext_example_output"><h2>'.$report['action'].'</h2>'."\n";
  switch($report['action']) {
    case 'ex-op':
      $output .= 'There are '.$report['count'].' records in the input file.<br/>'."\n";
      foreach($report['data'] as $line)
        $output .= $line.'<br/>'."\n";
      break;
  }
  $output .= '</div>'."\n";
  return $output;
}
